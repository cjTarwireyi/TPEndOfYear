using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using BusineesLogic.domain;
using BusineesLogic.services;

public partial class site1_InactiveProducts : System.Web.UI.Page
{
    private UserDTO userDtoUpdate;
    private UserDTO userDto;
    private ProductDAO products = new ProductDAO();
    protected void Page_Load(object sender, EventArgs e)
    {
        loadSession();
        accessRights();
        if(!IsPostBack)
            loadInactiveProducts();
    }
    protected void Active_Click(object sender, EventArgs e)
    {
        if (GridView1.SelectedIndex >= 0)
        {
            try
            {
                GridViewRow row = GridView1.SelectedRow;
                string id = row.Cells[1].Text;
                products.updateProductStatus(id, true);
                loadInactiveProducts();
            }
            catch(Exception ex)
            {
                ExceptionRedirect(ex);
            }
        }
    }
    protected void btnProducts_Click(object sender, EventArgs e)
    {
        Response.Redirect("Products.aspx");
    }

    private void loadSession()
    {
        userDtoUpdate = (UserDTO)Session["userUpdate"];
        Session.Remove("userUpdate");
        userDto = (UserDTO)Session["userDto"];
        if (userDto == null)
            Response.Redirect("Default.aspx");
        userDtoUpdate = (UserDTO)Session["userUpdate"];
        Session.Remove("userUpdate");


        if (userDto.userTypeName.Trim() != "Admin")
            AdminLinkPanel.Visible = false;
        else
            userPanel.Visible = false;

        lblUser.Text = userDto.username;

    }

    private void loadInactiveProducts()
    {
        try
        {
            GridView1.DataSource = products.populateInactiveProducts();
            GridView1.DataBind();
        }
        catch(Exception ex)
        {
            ExceptionRedirect(ex);
        }
    }

    private void accessRights()
    {
        GridView1.AutoGenerateSelectButton = true;
        //rights code 
        if (userDto.userTypeName.Trim() != "Admin")
        {
            GridView1.AutoGenerateDeleteButton = false;
            GridView1.AutoGenerateEditButton = false;
        }
        else
        {
            GridView1.AutoGenerateDeleteButton = true;
            GridView1.AutoGenerateEditButton = true;
        }
    }

    private void ExceptionRedirect(Exception ex)
    {
        Response.Redirect("ErrorPage.aspx?ErrorMessage=" + ex.Message.Replace('\n', ' '), false);
    }
    protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
    {
        try
        {
            List<string> productsDetails = new List<string>();
            GridViewRow row = GridView1.Rows[e.RowIndex];
            string id = GridView1.Rows[e.RowIndex].Cells[1].Text;

            productsDetails.Add(((TextBox)row.Cells[2].Controls[0]).Text); //name
            productsDetails.Add(((TextBox)row.Cells[3].Controls[0]).Text); //description
            productsDetails.Add(((TextBox)row.Cells[4].Controls[0]).Text); //price 
            productsDetails.Add(((TextBox)row.Cells[5].Controls[0]).Text); //quantity
            productsDetails.Add(((TextBox)row.Cells[7].Controls[0]).Text); //supplierID
            products.update(id, productsDetails);

            GridView1.EditIndex = -1;
            loadInactiveProducts();
        }
        catch (Exception ex)
        {
            ExceptionRedirect(ex);
        }
    }
    protected void GridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
    {
        GridView1.EditIndex = -1;
        loadInactiveProducts();
    }
    protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)
    {
        GridView1.EditIndex = e.NewEditIndex;
        loadInactiveProducts();
    }
    protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        try
        {
            string id = GridView1.Rows[e.RowIndex].Cells[1].Text;
            products.delete(id);
            loadInactiveProducts();
        }
        catch (Exception ex)
        {
            ExceptionRedirect(ex);
        }
    }
    protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        GridView1.PageIndex = e.NewPageIndex;
        loadInactiveProducts();
    }
    protected void Submit_Click(object sender, EventArgs e)
    {
        Session.Abandon();
        Session.Clear();
        Response.Redirect("Default.aspx");
    }
    protected void btnSearch_Click(object sender, EventArgs e)
    {

    }
    protected void dgrvData_Filter(object sender, EventArgs e)
    {
        if (testForNumber(txtSearch.Text) != false || txtSearch.Text == String.Empty)
        {
            DataTable searchedOrder = new DataTable();


            if (txtSearch.Text.ToString().Trim().Length == 0)
                loadInactiveProducts();
            else
            {
                try
                {

                    GridView1.DataSource = products.searchProducts(txtSearch.Text, false);
                    GridView1.DataBind();
                }
                catch (Exception ex)
                {
                    ExceptionRedirect(ex);
                }
            }
        }
    }
    private bool testForNumber(string number)
    {
        int temp;
        return int.TryParse(number, out temp);
    }
}